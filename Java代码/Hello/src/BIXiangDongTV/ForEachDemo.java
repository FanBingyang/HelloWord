package BIXiangDongTV;


import java.util.Map;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Set;

/*高级for循环:forEach
 *格式:
 *for(数据类型  变量名 : 被遍历的集合(Collection)或数组)
 *{       }
 * 
 * 对集合进行遍历的时候,只能获取元素,不能对集合进行操作
 * 
 * 迭代器除了遍历,还可以进行remove集合中的元素动作.
 * 如果是用ListIteartor还可以在遍历过程中对集合进行增删改查的动作
 * 
 ** 传统for循环和高级for循环有什么区别呢?
 *高级for有一个局限性,必须有被遍历的目标
 *
 *建议:在遍历数组的时候使用传统for,传统for可以定义角标
 */
public class ForEachDemo {

	private static final boolean Integer = false;

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		ArrayList<String> al = new ArrayList<String>();
		
		al.add("abc-1");
		al.add("abc-2");
		al.add("abc-3");
		al.add("abc-4");
		
		for(String s:al)
		{
			System.out.println(s);
		}
	/*	Iterator it = al.iterator();
		while(it.hasNext())
		{
			System.out.println(it.next());
		}
	*/
		
		int[] arr = {3,5,1};
		for(int i:arr)
		{
			System.out.println("i=:"+i);
		}
		
		HashMap<Integer,String> hm =new HashMap<Integer,String>();
		
		hm.put(1, "a");
		hm.put(2, "b");
		hm.put(3, "c");
		
		Set<Integer> keySet = hm.keySet();
		for(Integer i:keySet)
		{
			System.out.println(i+"::"+hm.get(i));
		}	
		
//		Set<Map.Entry<Integer,String>> entry = hm.entrySet();
//		for(Map.Entry<Integer,String> me:entry)
//		{
//			
//		}
		
		for(Map.Entry<Integer,String> me:hm.entrySet())
		{
			System.out.println(me.getKey()+"-----"+me.getValue());
		}
	}

}
