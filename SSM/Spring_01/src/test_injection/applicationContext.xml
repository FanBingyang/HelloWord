<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xmlns="http://www.springframework.org/schema/beans" 
		xmlns:p="http://www.springframework.org/schema/p"
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd ">
		
<!-- xmlns:p="http://www.springframework.org/schema/p"
	 用于p名称空间注入使用
 -->
	
	<!-- set注入 (重点掌握)-->
	<bean name="user" class="bean.User">
		<!-- 值类型注入：为user对象中名为name的属性注入tom作为值，下面的age也一样 -->
		<property name="name" value="tom"></property>
		<property name="age" value="18"></property>
		<!-- 引用类型注入： ref表示为car属性注入下方配置的car -->
		<property name="car" ref="car"></property>
	</bean>
	
	<!-- 将car对象配置到容器中 -->
	<bean name="car" class="bean.Car">
		<property name="name" value="兰博基尼"></property>
		<property name="color" value="蓝色"></property>
	</bean>
	
	
	<!-- ================================分割线================================= -->
	
	
	<!-- 构造函数注入(重点掌握) -->
	<bean name="user2" class="bean.User">
		<!-- name属性：构造函数的参数名
			 index属性：构造函数的参数索引（位置）
			 type属性：构造函数的参数类型，必须是类型完整名字
		 -->
		<constructor-arg name="name" value="999" index="0" type="java.lang.Integer"></constructor-arg>
		<constructor-arg name="car" ref="car"></constructor-arg>
		
	</bean>
	
	
	<!-- ================================分割线================================= -->
	
	
	<!-- p名称空间注入（了解即可） 还是走的set方法
		1,导入p名称空间  xmlns:p="http://www.springframework.org/schema/p
		2，使用 p: 属性完成注入
			|-值类型： p:属性名="值"
			|-对象类型： p:属性名-ref="bean名称"
	 -->
	<bean name="user3" class="bean.User" p:name="jack" p:age="20" p:car-ref="car">
	</bean>
	
	
	<!-- ================================分割线================================= -->
	
	
	<!-- 
		spel注入：spring Expression Language spring表达式语言
		value:#{别的注入名.属性名}。就是拿到别的注入的属性值，只能用于值属性，对象类型的还是用ref
	 -->
	<bean name="user4" class="bean.User">
		<property name="name" value="#{user.name}"></property>
		<property name="age" value="#{user3.age}"></property>
		<property name="car" ref="car"></property>
	</bean>
	
	
	<!-- ================================分割线================================= -->
	
	<!-- 复杂类型注入 -->
	
	
	<bean name="cb" class="test_injection.CollectionBean">
		<!-- array类型注入 -->
		<!-- 如果数组只准备注入一个值（对象），直接使用value|ref即可
		<property name="arr" value="tom"></property> -->
		
		<!-- array类型注入，多元素注入 -->
		<property name="arr">
			<array>
				<value>tom</value>
				<value>jerry</value>
				<ref bean="user4"/>
			</array>
		</property>
		
		<!-- list类型注入 -->
		<!-- 如果list只准备注入一个值（对象），直接使用value|ref即可
		<property name="list" value="jack"></property> -->
		<property name="list">
			<list>
				<value>tom</value>
				<value>jerry</value>
				<ref bean="user3"/>
			</list>
		</property>
		
		<!-- map类型注入,map是键值对存储 -->
		<property name="map">
			<map>
				<entry key="url" value="jdbc:mysql:///aaa"></entry>
				<entry key="user" value-ref="user4"></entry>
				<entry key-ref="user3" value-ref="user2"></entry>
			</map>
		</property>
		
		<!-- Properties类型注入 -->
		<property name="prop">
			<props>
				<prop key="riverClass">com.jdbd.mysql.Driver</prop>
				<prop key="username">root</prop>
				<prop key="password">123</prop>
			</props>
		</property>
	</bean>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
</beans>